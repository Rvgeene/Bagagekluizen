Op veel stations kun je een bagagekluis huren. We willen graag dat jij de software realiseert voor de verhuur van de kluizen. Er zijn door de beheerders de volgende randvoorwaarden gesteld aan het systeem:

Er zijn in totaal 12 kluizen (nr. 1 t/m 12).
Elke kluis moet beveiligd zijn met een code (minimaal 4 tekens) die de klant zelf bedenkt.
Als de stroom uitvalt mag de data niet verloren gaan en daarom moet je een bestand gebruiken voor de opslag van gegevens zoals kluisnummers en wachtwoorden.
Een voorbeeld van zo’n bestand (‘kluizen.txt’) zie je hieronder:

11;6754 
1;geheim 
5;kluisvanpietje 
12;z@terd@g 
In het voorbeeld zijn er 4 kluizen in gebruik (nummer 11, 1, 5 en 12). Het nummer wordt gevolgd door een puntkomma, waarachter de code staat die de gebruiker heeft ingevoerd voor de betreffende kluis. Op elke regel staat informatie van maximaal 1 kluis!

Als je programma start, moet je het onderstaande menu te zien krijgen:

1: Ik wil weten hoeveel kluizen nog vrij zijn 
2: Ik wil een nieuwe kluis 
3: Ik wil even iets uit mijn kluis halen 
4: Ik geef mijn kluis terug
Kies je voor optie 1, dan krijg je te zien hoeveel kluizen er nog beschikbaar zijn.
Kies je voor optie 2, dan controleert het programma of er kluizen vrij zijn. Zo ja, dan kan je een zelfgekozen code invoeren. Je krijgt een melding welke kluis je krijgt (bij een geldige code).
Kies je voor optie 3, dan moet je jouw kluisnummer en code invoeren. Is de combinatie correct, dan krijg je de melding dat je toegang krijgt tot jouw kluis.
Kies je voor optie 4, dan moet je jouw kluisnummer en code invoeren. Is de combinatie correct, dan zal jouw kluis weer beschikbaar zijn voor andere gebruikers. Deze optie is optioneel!
Hoe moet je beginnen?

Maak in je project (in PyCharm) een leeg bestand aan met de naam kluizen.txt.
Schrijf code om het menu met de opties 1-4 te printen. Laat de gebruiker de menukeuze als int-waarde invoeren. Geef een foutmelding als de gebruiker een ongeldige waarde invoert.
Schrijf voor elke menukeuze een functie die bijbehorende acties uitvoert. De functie moet aangeroepen worden zodra de gebruiker het betreffende getal in heeft ingevoerd. Om je op weg te helpen een suggestie hoe je deze opties kunt realiseren:
Functie def toon_aantal_kluizen_vrij(): lees alle regels van kluizen.txt in (zie ook les 7). Het aantal regels is het aantal bezette kluizen. Het is dan eenvoudig uit te rekenen hoeveel er nog vrij zijn. Het resultaat print je uit voor de gebruiker.

Functie def nieuwe_kluis(): maak een list met alle kluisnummers. Lees dan alle regels van kluizen.txt in, en doorloop deze met een for-loop. Elk kluisnummer dat je tegenkomt in kluizen.txt verwijder je uit de eerder gemaakte list. Hierna kan je controleren of er nog kluisnummers in de list staan. Zo ja, laat de gebruiker dan een code invoeren, en selecteer het eerste getal uit de lijst met beschikbare nummers. Schrijf het nummer en de code naar kluizen.txt. Geef de gebruiker een melding welk kluisnummer hij/zij krijgt. Meld het ook als er geen kluizen meer beschikbaar zijn.t!

Functie def kluis_openen(): Vraag de gebruiker om het kluisnummer en de kluiscode. Lees alle regels van kluizen.txt in en doorloop deze met een for-loop. Kom je de combinatie van kluisnummer en kluiscode tegen, dan heeft de gebruiker een correct combinatie ingevoerd. Geef hiervan een melding. Geef ook een melding als de ingevoerde gegevens niet kloppen!
Functie def kluis_teruggeven(): Let op: deze optie is optioneel! Vraag de gebruiker om een kluisnummer en kluiscode. Klopt dat, dan moet je de betreffende regel uit kluizen.txt verwijderen en de gebruiker melden dat de kluis is vrijgegeven. Werk hiervan de stappen zelf verder uit!

Je kunt er eventueel ook voor zorgen dat je het programma niet steeds opnieuw hoeft te starten. Dat kan door de code om het menu te printen, in een loop te plaatsen, en het menu uit te breiden met optie 5: ‘ik wil stoppen’. Het handigste is om een while-loop toe te passen i.p.v. een for-loop, omdat je niet van tevoren weet hoe vaak de gebruiker het menu wil gebruiken! De while-loop bespreken we in de volgende les, maar je kunt je alvast hierin verdiepen ter voorbereiding!